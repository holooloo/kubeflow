---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oauth2-proxy
  name: oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: oauth2-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: oauth2-proxy
    spec:
      containers:
      - args:
        - --http-address=0.0.0.0:4180
        - --config=/etc/oauth2_proxy/oauth2_proxy.cfg
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: client-id
              name: oauth2-proxy
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oauth2-proxy
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              key: cookie-secret
              name: oauth2-proxy
        - name: OAUTH2_PROXY_COOKIE_SECURE
          valueFrom:
            configMapKeyRef:
              key: FORCE_HTTPS
              name: oauth2-proxy-parameters
        - name: OAUTH2_PROXY_SSL_INSECURE_SKIP_VERIFY
          valueFrom:
            configMapKeyRef:
              key: ALLOW_SELF_SIGNED_ISSUER
              name: oauth2-proxy-parameters
        - name: OAUTH2_PROXY_SKIP_JWT_BEARER_TOKENS
          valueFrom:
            configMapKeyRef:
              key: ENABLE_M2M_TOKENS
              name: oauth2-proxy-parameters
        - name: OAUTH2_PROXY_EXTRA_JWT_ISSUERS
          valueFrom:
            configMapKeyRef:
              key: EXTRA_JWT_ISSUERS
              name: oauth2-proxy-parameters
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
        livenessProbe:
          httpGet:
            path: /ping
            port: http
            scheme: HTTP
        name: oauth2-proxy
        ports:
        - containerPort: 4180
          name: http
          protocol: TCP
        - containerPort: 44180
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ping
            port: http
            scheme: HTTP
        resources: {}
        volumeMounts:
        - mountPath: /etc/oauth2_proxy/oauth2_proxy.cfg
          name: configmain
          subPath: oauth2_proxy.cfg
      tolerations:
      - effect: NoSchedule
        key: node-group
        operator: Equal
        value: kaas
      volumes:
      - configMap:
          defaultMode: 420
          name: oauth2-proxy
        name: configmain
